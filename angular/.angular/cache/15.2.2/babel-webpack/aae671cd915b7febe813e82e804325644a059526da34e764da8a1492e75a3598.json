{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class AuthService {\n  constructor(httpClient) {\n    this.httpClient = httpClient;\n    this.authURL = 'http://localhost:8080/auth/';\n  }\n  newUser(newUser) {\n    return this.httpClient.post(this.authURL + 'new', newUser);\n  }\n  loginUser(loginUser) {\n    return this.httpClient.post(this.authURL + 'login', loginUser);\n  }\n}\nAuthService.ɵfac = function AuthService_Factory(t) {\n  return new (t || AuthService)(i0.ɵɵinject(i1.HttpClient));\n};\nAuthService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthService,\n  factory: AuthService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;AAUA,OAAM,MAAOA,WAAW;EAGtBC,YAAoBC,UAAsB;IAAtB,eAAU,GAAVA,UAAU;IAF9B,YAAO,GAAG,6BAA6B;EAEM;EAEtCC,OAAO,CAACA,OAAgB;IAC7B,OAAO,IAAI,CAACD,UAAU,CAACE,IAAI,CAAM,IAAI,CAACC,OAAO,GAAG,KAAK,EAAEF,OAAO,CAAC;EACjE;EAEOG,SAAS,CAACA,SAAoB;IACnC,OAAO,IAAI,CAACJ,UAAU,CAACE,IAAI,CAAS,IAAI,CAACC,OAAO,GAAG,OAAO,EAAEC,SAAS,CAAC;EACxE;;AAXWN,WAAW;mBAAXA,WAAW;AAAA;AAAXA,WAAW;SAAXA,WAAW;EAAAO,SAAXP,WAAW;EAAAQ,YAFV;AAAM","names":["AuthService","constructor","httpClient","newUser","post","authURL","loginUser","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\EUloc\\Downloads\\New folder (3)\\angular\\src\\app\\service\\auth.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { JwtDto } from '../model/jwt-dto';\nimport { LoginUser } from '../model/login-user';\nimport { NewUser } from '../model/new-user';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  authURL = 'http://localhost:8080/auth/';\n\n  constructor(private httpClient: HttpClient) {}\n\n  public newUser(newUser: NewUser): Observable<any>{\n    return this.httpClient.post<any>(this.authURL + 'new', newUser);\n  }\n\n  public loginUser(loginUser: LoginUser): Observable<JwtDto>{\n    return this.httpClient.post<JwtDto>(this.authURL + 'login', loginUser);\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}