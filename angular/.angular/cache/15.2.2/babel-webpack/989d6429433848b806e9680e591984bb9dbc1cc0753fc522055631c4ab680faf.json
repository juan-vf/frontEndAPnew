{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet SkillsComponent = class SkillsComponent {\n  constructor(skillService, tokenService, $swithSkill, $swithUpdSkill) {\n    this.skillService = skillService;\n    this.tokenService = tokenService;\n    this.$swithSkill = $swithSkill;\n    this.$swithUpdSkill = $swithUpdSkill;\n    this.skills = [];\n    this.modalSkill = false;\n    this.modalSkillUpd = false;\n    this.admin = false;\n    this.isLogged = false;\n  }\n  ngOnInit() {\n    this.admin = this.isAdmin();\n    this.loadSkill();\n    if (this.tokenService.getToken()) {\n      this.isLogged = true;\n    } else {\n      this.isLogged = false;\n    }\n    this.$swithSkill.$modal.subscribe(value => {\n      this.modalSkill = value;\n    });\n  }\n  loadSkill() {\n    this.skillService.getSkills().subscribe(data => {\n      this.skills = data;\n      console.log(this.skills);\n    });\n  }\n  openModalSkill() {\n    this.modalSkill = true;\n  }\n  openModalSkillUpd() {\n    this.modalSkillUpd = true;\n  }\n  isAdmin() {\n    let auths = this.tokenService.getAuthorities();\n    let admin;\n    auths.filter(auth => {\n      if (String(Object.values(auth)) === 'ROLE_ADMIN') {\n        admin = \"Admin\";\n      }\n    });\n    if (admin != undefined) {\n      return true;\n    }\n    return false;\n  }\n  deleteSkill(id) {\n    if (id != undefined) {\n      this.skillService.deleteSkill(id).subscribe(() => {\n        this.loadSkill();\n      }, err => {\n        alert(\"Error al eliminar la skill\");\n      });\n    }\n  }\n};\nSkillsComponent = __decorate([Component({\n  selector: 'app-skills',\n  templateUrl: './skills.component.html',\n  styleUrls: ['./skills.component.css']\n})], SkillsComponent);\nexport { SkillsComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AAWlC,IAAMC,eAAe,GAArB,MAAMA,eAAe;EAQ1BC,YACUC,YAAyB,EACzBC,YAAyB,EACzBC,WAA+B,EAC/BC,cAAkC;IAHlC,iBAAY,GAAZH,YAAY;IACZ,iBAAY,GAAZC,YAAY;IACZ,gBAAW,GAAXC,WAAW;IACX,mBAAc,GAAdC,cAAc;IAXxB,WAAM,GAAa,EAAE;IAErB,eAAU,GAAW,KAAK;IAC1B,kBAAa,GAAW,KAAK;IAC7B,UAAK,GAAY,KAAK;IACtB,aAAQ,GAAY,KAAK;EAOvB;EAEFC,QAAQ;IACN,IAAI,CAACC,KAAK,GAAG,IAAI,CAACC,OAAO,EAAE;IAC3B,IAAI,CAACC,SAAS,EAAE;IAEhB,IAAG,IAAI,CAACN,YAAY,CAACO,QAAQ,EAAE,EAAC;MAC9B,IAAI,CAACC,QAAQ,GAAG,IAAI;KACrB,MAAI;MACH,IAAI,CAACA,QAAQ,GAAG,KAAK;;IAGvB,IAAI,CAACP,WAAW,CAACQ,MAAM,CAACC,SAAS,CAAEC,KAAK,IAAG;MACzC,IAAI,CAACC,UAAU,GAAGD,KAAK;IACzB,CAAC,CAAC;EACJ;EAEAL,SAAS;IACP,IAAI,CAACP,YAAY,CAACc,SAAS,EAAE,CAACH,SAAS,CAAEI,IAAI,IAAG;MAC9C,IAAI,CAACC,MAAM,GAAGD,IAAI;MAClBE,OAAO,CAACC,GAAG,CAAC,IAAI,CAACF,MAAM,CAAC;IAE1B,CAAC,CAAC;EACJ;EACAG,cAAc;IACZ,IAAI,CAACN,UAAU,GAAG,IAAI;EACxB;EACAO,iBAAiB;IACf,IAAI,CAACC,aAAa,GAAG,IAAI;EAC3B;EACQf,OAAO;IACb,IAAIgB,KAAK,GAAI,IAAI,CAACrB,YAAY,CAACsB,cAAc,EAAE;IAC/C,IAAIlB,KAAK;IACTiB,KAAK,CAACE,MAAM,CAAEC,IAAI,IAAG;MAAE,IAAGC,MAAM,CAACC,MAAM,CAACC,MAAM,CAACH,IAAI,CAAC,CAAC,KAAK,YAAY,EAAC;QACrEpB,KAAK,GAAG,OAAO;;IAEjB,CAAC,CAAC;IACF,IAAGA,KAAK,IAAIwB,SAAS,EAAC;MACpB,OAAO,IAAI;;IAEb,OAAO,KAAK;EACd;EACAC,WAAW,CAACC,EAAS;IACnB,IAAGA,EAAE,IAAIF,SAAS,EAAC;MACjB,IAAI,CAAC7B,YAAY,CAAC8B,WAAW,CAACC,EAAE,CAAC,CAACpB,SAAS,CAAC,MAAI;QAC9C,IAAI,CAACJ,SAAS,EAAE;MAClB,CAAC,EAAEyB,GAAG,IAAG;QACPC,KAAK,CAAC,4BAA4B,CAAC;MACrC,CAAC,CAAC;;EAEN;CACD;AAhEYnC,eAAe,eAL3BD,SAAS,CAAC;EACTqC,QAAQ,EAAE,YAAY;EACtBC,WAAW,EAAE,yBAAyB;EACtCC,SAAS,EAAE,CAAC,wBAAwB;CACrC,CAAC,GACWtC,eAAe,CAgE3B;SAhEYA,eAAe","names":["Component","SkillsComponent","constructor","skillService","tokenService","$swithSkill","$swithUpdSkill","ngOnInit","admin","isAdmin","loadSkill","getToken","isLogged","$modal","subscribe","value","modalSkill","getSkills","data","skills","console","log","openModalSkill","openModalSkillUpd","modalSkillUpd","auths","getAuthorities","filter","auth","String","Object","values","undefined","deleteSkill","id","err","alert","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["C:\\Users\\EUloc\\Downloads\\New folder (3)\\angular\\src\\app\\components\\skills\\skills.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { Skill } from 'src/app/model/skill';\nimport { ModalSwitchService } from 'src/app/service/modal-switch.service';\nimport { SkillService } from 'src/app/service/skill.service';\nimport { TokenService } from 'src/app/service/token.service';\n\n@Component({\n  selector: 'app-skills',\n  templateUrl: './skills.component.html',\n  styleUrls: ['./skills.component.css']\n})\nexport class SkillsComponent {\n  skills: Skill [] = [];\n\n  modalSkill:boolean = false;\n  modalSkillUpd:boolean = false;\n  admin: boolean = false;\n  isLogged: boolean = false;\n\n  constructor(\n    private skillService:SkillService,\n    private tokenService:TokenService,\n    private $swithSkill: ModalSwitchService,\n    private $swithUpdSkill: ModalSwitchService,\n  ){}\n\n  ngOnInit(){\n    this.admin = this.isAdmin();\n    this.loadSkill();\n    \n    if(this.tokenService.getToken()){\n      this.isLogged = true;\n    }else{\n      this.isLogged = false;\n    }\n\n    this.$swithSkill.$modal.subscribe((value)=>{\n      this.modalSkill = value;\n    });\n  }\n\n  loadSkill():void{\n    this.skillService.getSkills().subscribe((data)=>{\n      this.skills = data;\n      console.log(this.skills);\n      \n    });\n  }\n  openModalSkill(){\n    this.modalSkill = true;\n  }\n  openModalSkillUpd(){\n    this.modalSkillUpd = true;\n  }\n  private isAdmin():boolean{\n    let auths =  this.tokenService.getAuthorities();\n    let admin;\n    auths.filter((auth)=> {if(String(Object.values(auth)) === 'ROLE_ADMIN'){\n      admin = \"Admin\"\n    }\n    });\n    if(admin != undefined){\n      return true;\n    }\n    return false;\n  }\n  deleteSkill(id:number):void{\n    if(id != undefined){\n      this.skillService.deleteSkill(id).subscribe(()=>{\n        this.loadSkill();\n      }, err => {\n        alert(\"Error al eliminar la skill\")\n      });\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}