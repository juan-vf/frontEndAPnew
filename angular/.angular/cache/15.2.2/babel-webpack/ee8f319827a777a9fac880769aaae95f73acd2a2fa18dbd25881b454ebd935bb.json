{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/service/experience-service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"src/app/service/modal-switch.service\";\nexport class UpdateExpComponent {\n  constructor(experienceService, activatedRoute, router, $modalSwService) {\n    this.experienceService = experienceService;\n    this.activatedRoute = activatedRoute;\n    this.router = router;\n    this.$modalSwService = $modalSwService;\n    this.expUp = null;\n  }\n  ngOnInit() {\n    const id = this.activatedRoute.snapshot.params['id'];\n    this.experienceService.getExpById(id).subscribe(data => {\n      this.expUp = data;\n    }, err => {\n      alert(\"Fallo la actualización\");\n      this.router.navigate(['']);\n    });\n  }\n  updateExp() {\n    const id = this.activatedRoute.snapshot.params['id'];\n    this.experienceService.updateExp(id, this.expUp).subscribe(data => {\n      this.router.navigate(['']);\n    }, err => {\n      alert(\"Fallo la actualización\");\n      this.router.navigate(['']);\n    });\n  }\n  closeModalExpUpd() {\n    this.$modalSwService.$modal.emit(false);\n  }\n}\nUpdateExpComponent.ɵfac = function UpdateExpComponent_Factory(t) {\n  return new (t || UpdateExpComponent)(i0.ɵɵdirectiveInject(i1.ExperienceService), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.ModalSwitchService));\n};\nUpdateExpComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: UpdateExpComponent,\n  selectors: [[\"app-update-exp\"]],\n  decls: 2,\n  vars: 0,\n  template: function UpdateExpComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"p\");\n      i0.ɵɵtext(1, \"update-exp works!\");\n      i0.ɵɵelementEnd();\n    }\n  },\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;;AAWA,OAAM,MAAOA,kBAAkB;EAI7BC,YAAoBC,iBAAoC,EAAUC,cAA8B,EACtFC,MAAc,EAAUC,eAAmC;IADjD,sBAAiB,GAAjBH,iBAAiB;IAA6B,mBAAc,GAAdC,cAAc;IACtE,WAAM,GAANC,MAAM;IAAkB,oBAAe,GAAfC,eAAe;IAJjD,UAAK,GAAe,IAAI;EAI+C;EACvEC,QAAQ;IACN,MAAMC,EAAE,GAAG,IAAI,CAACJ,cAAc,CAACK,QAAQ,CAACC,MAAM,CAAC,IAAI,CAAC;IAEpD,IAAI,CAACP,iBAAiB,CAACQ,UAAU,CAACH,EAAE,CAAC,CAACI,SAAS,CAACC,IAAI,IAAG;MACrD,IAAI,CAACC,KAAK,GAAGD,IAAI;IACnB,CAAC,EAAEE,GAAG,IAAG;MACPC,KAAK,CAAC,wBAAwB,CAAC;MAC/B,IAAI,CAACX,MAAM,CAACY,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC;IAC5B,CAAC,CAAC;EACJ;EAEAC,SAAS;IACP,MAAMV,EAAE,GAAG,IAAI,CAACJ,cAAc,CAACK,QAAQ,CAACC,MAAM,CAAC,IAAI,CAAC;IACpD,IAAI,CAACP,iBAAiB,CAACe,SAAS,CAACV,EAAE,EAAE,IAAI,CAACM,KAAK,CAAC,CAACF,SAAS,CAAEC,IAAI,IAAG;MACjE,IAAI,CAACR,MAAM,CAACY,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC;IAC5B,CAAC,EAAEF,GAAG,IAAG;MACPC,KAAK,CAAC,wBAAwB,CAAC;MAC/B,IAAI,CAACX,MAAM,CAACY,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC;IAC5B,CAAC,CAAC;EACJ;EAEAE,gBAAgB;IACd,IAAI,CAACb,eAAe,CAACc,MAAM,CAACC,IAAI,CAAC,KAAK,CAAC;EACzC;;AA7BWpB,kBAAkB;mBAAlBA,kBAAkB;AAAA;AAAlBA,kBAAkB;QAAlBA,kBAAkB;EAAAqB;EAAAC;EAAAC;EAAAC;IAAA;MCX/BC,yBAAG;MAAAA,iCAAiB;MAAAA,iBAAI","names":["UpdateExpComponent","constructor","experienceService","activatedRoute","router","$modalSwService","ngOnInit","id","snapshot","params","getExpById","subscribe","data","expUp","err","alert","navigate","updateExp","closeModalExpUpd","$modal","emit","selectors","decls","vars","template","i0"],"sourceRoot":"","sources":["C:\\Users\\EUloc\\Downloads\\New folder (3)\\angular\\src\\app\\components\\experience\\update-exp\\update-exp.component.ts","C:\\Users\\EUloc\\Downloads\\New folder (3)\\angular\\src\\app\\components\\experience\\update-exp\\update-exp.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Experience } from 'src/app/model/experience';\nimport { ExperienceService } from 'src/app/service/experience-service';\nimport { ModalSwitchService } from 'src/app/service/modal-switch.service';\n\n@Component({\n  selector: 'app-update-exp',\n  templateUrl: './update-exp.component.html',\n  styleUrls: ['./update-exp.component.css']\n})\nexport class UpdateExpComponent {\n  expUp: Experience = null;\n  switchExp!: boolean;\n\n  constructor(private experienceService: ExperienceService, private activatedRoute: ActivatedRoute, \n    private router: Router, private $modalSwService: ModalSwitchService){}\n  ngOnInit():void{\n    const id = this.activatedRoute.snapshot.params['id'];\n\n    this.experienceService.getExpById(id).subscribe(data => {\n      this.expUp = data;\n    }, err => {\n      alert(\"Fallo la actualización\");\n      this.router.navigate(['']);\n    });\n  }\n\n  updateExp():void{\n    const id = this.activatedRoute.snapshot.params['id'];\n    this.experienceService.updateExp(id, this.expUp).subscribe( data => {\n      this.router.navigate(['']);\n    }, err => {\n      alert(\"Fallo la actualización\");\n      this.router.navigate(['']);\n    });\n  }\n\n  closeModalExpUpd():void{\n    this.$modalSwService.$modal.emit(false);\n  }\n}\n","<p>update-exp works!</p>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}