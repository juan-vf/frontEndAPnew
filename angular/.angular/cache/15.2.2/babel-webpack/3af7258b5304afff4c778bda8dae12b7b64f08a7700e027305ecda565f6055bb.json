{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet ExperienceComponent = class ExperienceComponent {\n  constructor(expService, tokenService, $swithExp) {\n    this.expService = expService;\n    this.tokenService = tokenService;\n    this.$swithExp = $swithExp;\n    this.experience = [];\n    this.isLogged = false;\n  }\n  ngOnInit() {\n    this.$swithExp.$modal.subscribe(value => {\n      this.modalExp = value;\n    });\n    this.loadExp();\n    if (this.tokenService.getToken()) {\n      this.isLogged = true;\n    } else {\n      this.isLogged = false;\n    }\n  }\n  loadExp() {\n    this.expService.getExperiences().subscribe(data => {\n      this.experience = data;\n    });\n  }\n  openModalExp() {\n    this.modalExp = true;\n  }\n};\nExperienceComponent = __decorate([Component({\n  selector: 'app-experience',\n  templateUrl: './experience.component.html',\n  styleUrls: ['./experience.component.css']\n})], ExperienceComponent);\nexport { ExperienceComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AAWlC,IAAMC,mBAAmB,GAAzB,MAAMA,mBAAmB;EAK9BC,YAAoBC,UAAoC,EAAWC,YAA0B,EAAUC,SAA6B;IAAhH,eAAU,GAAVF,UAAU;IAAqC,iBAAY,GAAZC,YAAY;IAAwB,cAAS,GAATC,SAAS;IAJhH,eAAU,GAAiB,EAAE;IAM7B,aAAQ,GAAG,KAAK;EAFsH;EAGtIC,QAAQ;IACN,IAAI,CAACD,SAAS,CAACE,MAAM,CAACC,SAAS,CAAEC,KAAK,IAAG;MACvC,IAAI,CAACC,QAAQ,GAAGD,KAAK;IACvB,CAAC,CAAC;IACF,IAAI,CAACE,OAAO,EAAE;IACd,IAAG,IAAI,CAACP,YAAY,CAACQ,QAAQ,EAAE,EAAC;MAC9B,IAAI,CAACC,QAAQ,GAAG,IAAI;KACrB,MAAI;MACH,IAAI,CAACA,QAAQ,GAAG,KAAK;;EAEzB;EAEAF,OAAO;IACL,IAAI,CAACR,UAAU,CAACW,cAAc,EAAE,CAACN,SAAS,CAACO,IAAI,IAAE;MAC/C,IAAI,CAACC,UAAU,GAAGD,IAAI;IACxB,CAAC,CAAC;EACJ;EAEAE,YAAY;IACV,IAAI,CAACP,QAAQ,GAAG,IAAI;EACtB;CACD;AA7BYT,mBAAmB,eAL/BD,SAAS,CAAC;EACTkB,QAAQ,EAAE,gBAAgB;EAC1BC,WAAW,EAAE,6BAA6B;EAC1CC,SAAS,EAAE,CAAC,4BAA4B;CACzC,CAAC,GACWnB,mBAAmB,CA6B/B;SA7BYA,mBAAmB","names":["Component","ExperienceComponent","constructor","expService","tokenService","$swithExp","ngOnInit","$modal","subscribe","value","modalExp","loadExp","getToken","isLogged","getExperiences","data","experience","openModalExp","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["C:\\Users\\EUloc\\Downloads\\New folder (3)\\angular\\src\\app\\components\\experience\\experience.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { Experience } from 'src/app/model/experience';\nimport { ExperienceServiceService } from 'src/app/service/experience-service.service';\nimport { ModalSwitchService } from 'src/app/service/modal-switch.service';\nimport { TokenService } from 'src/app/service/token.service';\n\n@Component({\n  selector: 'app-experience',\n  templateUrl: './experience.component.html',\n  styleUrls: ['./experience.component.css']\n})\nexport class ExperienceComponent {\n  experience: Experience[] = [];\n\n  modalExp!:boolean;\n\n  constructor(private expService: ExperienceServiceService,  private tokenService: TokenService, private $swithExp: ModalSwitchService){}\n\n  isLogged = false;\n  ngOnInit(){\n    this.$swithExp.$modal.subscribe((value)=>{\n      this.modalExp = value;\n    })\n    this.loadExp()\n    if(this.tokenService.getToken()){\n      this.isLogged = true;\n    }else{\n      this.isLogged = false;\n    }\n  }\n  \n  loadExp():void{\n    this.expService.getExperiences().subscribe(data=>{\n      this.experience = data;\n    })\n  }\n\n  openModalExp():void{\n    this.modalExp = true;\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}