{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/service/modal-switch.service\";\nimport * as i2 from \"src/app/service/skill.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/forms\";\nfunction UpdateSkillComponent_div_23_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 18)(1, \"h3\");\n    i0.ɵɵtext(2, \" Soft Skill Check \\uD83D\\uDC4C\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction UpdateSkillComponent_div_28_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 18)(1, \"h3\");\n    i0.ɵɵtext(2, \" Hard Skill Check \\uD83D\\uDC4C\");\n    i0.ɵɵelementEnd()();\n  }\n}\nexport class UpdateSkillComponent {\n  constructor($swithSkillUpd, SkillService, router, activatedRoute, $portIdUpd) {\n    this.$swithSkillUpd = $swithSkillUpd;\n    this.SkillService = SkillService;\n    this.router = router;\n    this.activatedRoute = activatedRoute;\n    this.$portIdUpd = $portIdUpd;\n  }\n  ngOnInit() {\n    // this.SoftCheck = document.getElementById(\"typeSoft\");\n    // this.HardCheck = document.getElementById(\"typeHard\");\n    // console.log([this.SoftCheck.checked]);\n    // this.typeSoft = this.skill.typeSoft;\n    // this.typeHard = this.skill.typeHard;\n    // console.log(this.typeSoft, this.typeHard);\n    // this.SoftCheck.addEventListener(\"change\", (element: any) => {\n    //   this.typeSoft = element.target.checked;\n    //   this.typeHard = !element.target.checked;\n    // });\n    // this.HardCheck.addEventListener(\"change\", (element: any) => {\n    //   this.typeHard = element.target.checked;\n    //   this.typeSoft = !element.target.checked;\n    // });\n    // this.$portIdUpd.$modal.subscribe(data => {\n    //   this.id = data;\n    //   console.log(data);\n    // });\n    const id = this.activatedRoute.snapshot.params['id'];\n    this.SkillService.getSkillById(id).subscribe(skill => {\n      this.skill = skill;\n      console.log(skill);\n    }, err => {\n      alert(\"Fallo la actualización\");\n      this.router.navigate(['']);\n    });\n  }\n  updateSkill() {\n    const id = this.activatedRoute.snapshot.params['id'];\n    this.SkillService.updateSkill(id, this.skill).subscribe(data => {\n      this.router.navigate(['']);\n    }, err => {\n      alert(\"Fallo la actualización\");\n      this.router.navigate(['']);\n      // window.location.reload();\n    });\n  }\n\n  closeModalSkillUpd() {\n    this.router.navigate(['']);\n    this.$swithSkillUpd.$modal.emit(false);\n  }\n}\nUpdateSkillComponent.ɵfac = function UpdateSkillComponent_Factory(t) {\n  return new (t || UpdateSkillComponent)(i0.ɵɵdirectiveInject(i1.ModalSwitchService), i0.ɵɵdirectiveInject(i2.SkillService), i0.ɵɵdirectiveInject(i3.Router), i0.ɵɵdirectiveInject(i3.ActivatedRoute), i0.ɵɵdirectiveInject(i1.ModalSwitchService));\n};\nUpdateSkillComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: UpdateSkillComponent,\n  selectors: [[\"app-update-skill\"]],\n  decls: 32,\n  vars: 6,\n  consts: [[1, \"gx-0\", \"gy-0\", \"d-flex\", \"flex-column\", \"col-12\"], [1, \"closeButton\"], [1, \"rounded\", 3, \"click\"], [\"novalidate\", \"\", 3, \"ngSubmit\"], [\"f\", \"ngForm\"], [1, \"form-floating\", \"mb-3\"], [\"type\", \"text\", \"id\", \"nameSkill\", \"name\", \"nameSkill\", \"required\", \"\", \"placeholder\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"nameSkill\"], [1, \"form-floating\"], [\"type\", \"range\", \"id\", \"skillDomain\", \"name\", \"skillDomain\", \"required\", \"\", \"placeholder\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"skillDomain\"], [\"type\", \"checkbox\", \"id\", \"typeSoft\", \"name\", \"typeSoft\", \"required\", \"\", \"placeholder\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"typeSoft\"], [\"class\", \"d-flex\", 4, \"ngIf\"], [\"type\", \"checkbox\", \"id\", \"typeHard\", \"name\", \"typeHard\", \"required\", \"\", \"placeholder\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"typeHard\"], [1, \"\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\"], [1, \"d-flex\"]],\n  template: function UpdateSkillComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"p\");\n      i0.ɵɵtext(1, \"update-about works!\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"div\", 0)(3, \"div\", 1)(4, \"button\", 2);\n      i0.ɵɵlistener(\"click\", function UpdateSkillComponent_Template_button_click_4_listener() {\n        return ctx.closeModalSkillUpd();\n      });\n      i0.ɵɵtext(5, \"X\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(6, \"div\")(7, \"h2\");\n      i0.ɵɵtext(8, \" Skill \");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(9, \"form\", 3, 4);\n      i0.ɵɵlistener(\"ngSubmit\", function UpdateSkillComponent_Template_form_ngSubmit_9_listener() {\n        return ctx.updateSkill();\n      });\n      i0.ɵɵelementStart(11, \"div\", 5)(12, \"input\", 6);\n      i0.ɵɵlistener(\"ngModelChange\", function UpdateSkillComponent_Template_input_ngModelChange_12_listener($event) {\n        return ctx.skill.nameSkill = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(13, \"label\", 7);\n      i0.ɵɵtext(14, \"Skill\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(15, \"div\", 8)(16, \"input\", 9);\n      i0.ɵɵlistener(\"ngModelChange\", function UpdateSkillComponent_Template_input_ngModelChange_16_listener($event) {\n        return ctx.skill.skillDomain = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(17, \"label\", 10);\n      i0.ɵɵtext(18, \"Dominio de la Skill entre 0 a 100%\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(19, \"div\", 8)(20, \"input\", 11);\n      i0.ɵɵlistener(\"ngModelChange\", function UpdateSkillComponent_Template_input_ngModelChange_20_listener($event) {\n        return ctx.skill.typeSoft = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(21, \"label\", 12);\n      i0.ɵɵtext(22, \"soft\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(23, UpdateSkillComponent_div_23_Template, 3, 0, \"div\", 13);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(24, \"div\", 8)(25, \"input\", 14);\n      i0.ɵɵlistener(\"ngModelChange\", function UpdateSkillComponent_Template_input_ngModelChange_25_listener($event) {\n        return ctx.skill.typeHard = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(26, \"label\", 15);\n      i0.ɵɵtext(27, \"hard\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(28, UpdateSkillComponent_div_28_Template, 3, 0, \"div\", 13);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(29, \"div\", 16)(30, \"button\", 17);\n      i0.ɵɵtext(31, \"Actualizar\");\n      i0.ɵɵelementEnd()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(12);\n      i0.ɵɵproperty(\"ngModel\", ctx.skill.nameSkill);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.skill.skillDomain);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.skill.typeSoft);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", ctx.skill.typeSoft === true);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngModel\", ctx.skill.typeHard);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", ctx.skill.typeHard === true);\n    }\n  },\n  dependencies: [i4.NgIf, i5.ɵNgNoValidate, i5.DefaultValueAccessor, i5.RangeValueAccessor, i5.CheckboxControlValueAccessor, i5.NgControlStatus, i5.NgControlStatusGroup, i5.RequiredValidator, i5.CheckboxRequiredValidator, i5.NgModel, i5.NgForm],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["i0","UpdateSkillComponent","constructor","$swithSkillUpd","SkillService","router","activatedRoute","$portIdUpd","ngOnInit","id","snapshot","params","getSkillById","subscribe","skill","console","log","err","alert","navigate","updateSkill","data","closeModalSkillUpd","$modal","emit","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\EUloc\\Downloads\\New folder (3)\\angular\\src\\app\\components\\skills\\update-skill\\update-skill.component.html","C:\\Users\\EUloc\\Downloads\\New folder (3)\\angular\\src\\app\\components\\skills\\update-skill\\update-skill.component.ts"],"sourcesContent":["<p>update-about works!</p>\n<div class=\"gx-0 gy-0 d-flex flex-column col-12\">\n    <div class=\"closeButton\">\n        <button class=\"rounded\" (click)=\"closeModalSkillUpd()\">X</button>\n    </div>\n    <div>\n        <h2>\n            Skill\n        </h2>\n    </div>\n    <form #f=\"ngForm\" (ngSubmit)=\"updateSkill()\" novalidate>\n        <div class=\"form-floating mb-3\">\n            <input type=\"text\" class=\"form-control\" id=\"nameSkill\" name=\"nameSkill\" [(ngModel)]=\"skill.nameSkill\"\n                required placeholder=\"\" />\n            <label for=\"nameSkill\">Skill</label>\n        </div>\n        <div class=\"form-floating\">\n            <input type=\"range\" class=\"form-control\" id=\"skillDomain\" name=\"skillDomain\" [(ngModel)]=\"skill.skillDomain\"\n                required placeholder=\"\">\n            <label for=\"skillDomain\">Dominio de la Skill entre 0 a 100%</label>\n        </div>\n        <div class=\"form-floating\">\n            <input type=\"checkbox\" class=\"form-control\" id=\"typeSoft\" name=\"typeSoft\" [(ngModel)]=\"skill.typeSoft\"\n                required placeholder=\"\">\n            <label for=\"typeSoft\">soft</label>\n            <div class=\"d-flex\" *ngIf=\"skill.typeSoft === true\">\n                <h3> Soft Skill Check 👌</h3>\n            </div>\n        </div>\n        <div class=\"form-floating\">\n            <input type=\"checkbox\" class=\"form-control\" id=\"typeHard\" name=\"typeHard\" [(ngModel)]=\"skill.typeHard\"\n                required placeholder=\"\">\n            <label for=\"typeHard\">hard</label>\n            <div class=\"d-flex\" *ngIf=\"skill.typeHard === true\">\n                <h3> Hard Skill Check 👌</h3>\n            </div>\n        </div>\n        <div class=\"\">\n            <button type=\"submit\" class=\"btn btn-primary\">Actualizar</button>\n        </div>\n    </form>\n</div>","import { Component } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Skill } from 'src/app/model/skill';\nimport { ModalSwitchService } from 'src/app/service/modal-switch.service';\nimport { SkillService } from 'src/app/service/skill.service';\n\n@Component({\n  selector: 'app-update-skill',\n  templateUrl: './update-skill.component.html',\n  styleUrls: ['./update-skill.component.css']\n})\nexport class UpdateSkillComponent {\n  skill:Skill;\n  nameSkill: string;\n  typeSoft: boolean;\n  typeHard: boolean;\n  skillDomain: number;\n\n  SoftCheck:any;\n  HardCheck:any;\n  constructor(\n    private $swithSkillUpd: ModalSwitchService,\n    private SkillService:SkillService,\n    private router:Router,\n    private activatedRoute: ActivatedRoute,\n    private $portIdUpd: ModalSwitchService\n  ){}\n  ngOnInit(){\n\n    // this.SoftCheck = document.getElementById(\"typeSoft\");\n    // this.HardCheck = document.getElementById(\"typeHard\");\n    // console.log([this.SoftCheck.checked]);\n\n    // this.typeSoft = this.skill.typeSoft;\n    // this.typeHard = this.skill.typeHard;\n    // console.log(this.typeSoft, this.typeHard);\n    \n    // this.SoftCheck.addEventListener(\"change\", (element: any) => {\n    //   this.typeSoft = element.target.checked;\n    //   this.typeHard = !element.target.checked;\n    // });\n    // this.HardCheck.addEventListener(\"change\", (element: any) => {\n    //   this.typeHard = element.target.checked;\n    //   this.typeSoft = !element.target.checked;\n    // });\n\n    // this.$portIdUpd.$modal.subscribe(data => {\n    //   this.id = data;\n    //   console.log(data);\n    // });\n\n    const id = this.activatedRoute.snapshot.params['id'];\n    this.SkillService.getSkillById(id).subscribe((skill)=>{\n      this.skill = skill;\n      console.log(skill);\n      \n    }, err => {\n      alert(\"Fallo la actualización\");\n      this.router.navigate(['']);\n    });\n  }\n  updateSkill(){\n    const id = this.activatedRoute.snapshot.params['id'];\n\n    this.SkillService.updateSkill(id, this.skill).subscribe((data)=>{\n      this.router.navigate(['']);\n    }, err => {\n      alert(\"Fallo la actualización\");\n      this.router.navigate(['']);\n      // window.location.reload();\n    });\n  }\n  closeModalSkillUpd(){\n    this.router.navigate(['']);\n    this.$swithSkillUpd.$modal.emit(false);\n  }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}