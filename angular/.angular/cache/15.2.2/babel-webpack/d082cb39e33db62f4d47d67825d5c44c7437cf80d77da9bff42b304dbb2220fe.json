{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/service/modal-switch.service\";\nexport class ExpModalComponent {\n  constructor($modalSwService) {\n    this.$modalSwService = $modalSwService;\n  }\n  closeModalExp() {\n    this.$modalSwService.$modal.emit(false);\n  }\n}\nExpModalComponent.ɵfac = function ExpModalComponent_Factory(t) {\n  return new (t || ExpModalComponent)(i0.ɵɵdirectiveInject(i1.ModalSwitchService));\n};\nExpModalComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ExpModalComponent,\n  selectors: [[\"app-exp-modal\"]],\n  decls: 2,\n  vars: 0,\n  template: function ExpModalComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"p\");\n      i0.ɵɵtext(1, \"exp-modal works!\");\n      i0.ɵɵelementEnd();\n    }\n  },\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;AAQA,OAAM,MAAOA,iBAAiB;EAG5BC,YAAoBC,eAAmC;IAAnC,oBAAe,GAAfA,eAAe;EAAsB;EAEzDC,aAAa;IACX,IAAI,CAACD,eAAe,CAACE,MAAM,CAACC,IAAI,CAAC,KAAK,CAAC;EACzC;;AAPWL,iBAAiB;mBAAjBA,iBAAiB;AAAA;AAAjBA,iBAAiB;QAAjBA,iBAAiB;EAAAM;EAAAC;EAAAC;EAAAC;IAAA;MCR9BC,yBAAG;MAAAA,gCAAgB;MAAAA,iBAAI","names":["ExpModalComponent","constructor","$modalSwService","closeModalExp","$modal","emit","selectors","decls","vars","template","i0"],"sourceRoot":"","sources":["C:\\Users\\EUloc\\Downloads\\New folder (3)\\angular\\src\\app\\components\\experience\\exp-modal\\exp-modal.component.ts","C:\\Users\\EUloc\\Downloads\\New folder (3)\\angular\\src\\app\\components\\experience\\exp-modal\\exp-modal.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { ModalSwitchService } from 'src/app/service/modal-switch.service';\n\n@Component({\n  selector: 'app-exp-modal',\n  templateUrl: './exp-modal.component.html',\n  styleUrls: ['./exp-modal.component.css']\n})\nexport class ExpModalComponent {\n  switchExp!: boolean;\n\n  constructor(private $modalSwService: ModalSwitchService){}\n\n  closeModalExp(){\n    this.$modalSwService.$modal.emit(false);\n  }\n  \n\n}\n","<p>exp-modal works!</p>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}